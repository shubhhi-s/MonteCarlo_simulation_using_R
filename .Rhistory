x = rexp(1000, rate = 0.25)  # mean = 1/rate
hist(x); print(x[1:6]); mean(x)
x = rexp(1000, rate = 0.25)  # mean = 1/rate
hist(x); print(x[1:6]); mean(x)
x = rexp(1000, rate = 0.25)  # mean = 1/rate
hist(x); print(x[1:6]); mean(x)
x = rexp(1000, rate = 0.25)  # mean = 1/rate
hist(x); print(x[1:6]); mean(x)
x = rexp(1000, rate = 0.25)  # mean = 1/rate
hist(x); print(x[1:6]); mean(x)
x = rexp(100000, rate = 0.25)  # mean = 1/rate
hist(x); print(x[1:6]); mean(x)
x = rexp(100000, rate = 0.25)  # mean = 1/rate
hist(x); print(x[1:6]); mean(x)
x = rexp(1000, rate = 0.25)  # mean = 1/rate
hist(x); print(x[1:6]); mean(x)
AB = 99.8; BC = 100.12; CA = 99.94
AngleC = acos( (BC^2 + CA^2 - AB^2) / (2*BC*CA) )  # cosine law
AngleC = AngleC * 180/pi                           # radians to degrees
AB = 99.8; BC = 100.12; CA = 99.94
AngleC = acos( (BC^2 + CA^2 - AB^2) / (2*BC*CA) )  # cosine law
AngleC = AngleC * 180/pi                           # radians to degrees
AB = rnorm(1000, 100, 1/3)   # 99.73 % fall within 3 std devs
BC = rnorm(1000, 100, 1/3)
CA = rnorm(1000, 100, 1/3)
AngleC = acos( (BC^2 + CA^2 - AB^2) / (2*BC*CA) )   # cosine law
AngleC = AngleC * 180/pi                            # radians to degrees
AngleC[1:10]; mean(AngleC); sd(AngleC)
hist(AngleC)
AB = rnorm(1000, 100, 1/3)   # 99.73 % fall within 3 std devs
BC = rnorm(1000, 100, 1/3)
CA = rnorm(1000, 100, 1/3)
AngleC = acos( (BC^2 + CA^2 - AB^2) / (2*BC*CA) )   # cosine law
AngleC = AngleC * 180/pi                            # radians to degrees
AngleC[1:10]; mean(AngleC); sd(AngleC)
hist(AngleC)
AB = rnorm(1000, 100, 1/3)   # 99.73 % fall within 3 std devs
BC = rnorm(1000, 100, 1/3)
CA = rnorm(1000, 100, 1/3)
AngleC = acos( (BC^2 + CA^2 - AB^2) / (2*BC*CA) )   # cosine law
AngleC = AngleC * 180/pi                            # radians to degrees
AngleC[1:10]; mean(AngleC); sd(AngleC)
hist(AngleC)
AB = rnorm(1000, 100, 1/3)   # 99.73 % fall within 3 std devs
BC = rnorm(1000, 100, 1/3)
CA = rnorm(1000, 100, 1/3)
AngleC = acos( (BC^2 + CA^2 - AB^2) / (2*BC*CA) )   # cosine law
AngleC = AngleC * 180/pi                            # radians to degrees
AngleC[1:10]; mean(AngleC); sd(AngleC)
hist(AngleC)
AB = rnorm(1000, 100, 1/3)   # 99.73 % fall within 3 std devs
BC = rnorm(1000, 100, 1/3)
CA = rnorm(1000, 100, 1/3)
AngleC = acos( (BC^2 + CA^2 - AB^2) / (2*BC*CA) )   # cosine law
AngleC = AngleC * 180/pi                            # radians to degrees
AngleC[1:10]; mean(AngleC); sd(AngleC)
hist(AngleC)
VS = 20; VM = 15; VL = 10
PS = 5;  PM = 7;  PL = 10
XCake = 0.05; XChoc = 0.10
PCake =  10;  PChoc = 3; Max = 50
VCake = XCake * (VS+VM+VL)
VChoc = XChoc * (VS+VM+VL)
GetProfit <- function(VS,VM,VL, PS,PM,PL, VCake,VChoc, PCake,PChoc, Max) {
Profit = VS*PS + VM*PM + VL*PL +
VCake*PCake + VChoc*PChoc
if(VS+VM+VL > Max) Profit = 0.9 * Profit
return(Profit)
}
GetProfit(VS,VM,VL, PS,PM,PL, VCake,VChoc, PCake,PChoc, Max)
GetProfit(VS+5,VM,VL, PS,PM,PL, VCake,VChoc, PCake,PChoc+3, Max)
GetProfit(VS,VM,VL, PS,PM,PL, VCake,VChoc, PCake,PChoc, Max)
GetProfit(VS+5,VM,VL, PS,PM,PL, VCake,VChoc, PCake,PChoc+3, Max)
nsim = 365                # Days in the Year
xVS = rpois(nsim, VS)     # Daily Qty of Small Boquets
xVM = rpois(nsim, VM)     # Daily Qty of Medium Boquets
xVL = rpois(nsim, VL)     # Daily Qty of Large Boquets
xVS
xVCake = rbinom(nsim, VS+VM+VL, XCake) # Daily Qty of Cake Orders
xVChoc = rbinom(nsim, VS+VM+VL, XChoc) # Daily Qty of Choc Orders
Xtable = data.frame(Qty_Small    = xVS,
Qty_Medium   = xVM,
Qty_Large    = xVL,
Price_Small  = 5,
Price_Medium = 7,
Price_Large  = 10,
Qty_Cake     = xVCake,
Qty_Choc     = xVChoc,
Price_Cake   = 10,
Price_Choc   = 3,
Qty_Penalty  = 50)
head(Xtable)
Profit = SimulateY(GetProfit, Xtable)
# Load Libraries & Functions
source("https://pastebin.com/raw/K5rqVMCE")
Profit = SimulateY(GetProfit, Xtable)
hist(Profit)
cat("\n", "Avg Daily Profit    :", mean(Profit), "\n",
"Total Annual Profit :", sum(Profit), "\n","\n")
# What is the chance the Florist makes atleast $300/day
length(Profit)
length(Profit[Profit >= 300]) / length(Profit)
# Export Data Into A Spreadsheet
cbind(Xtable,Profit)[1:5,]
write.csv(cbind(Xtable,Profit), "out.csv")
nsim = 365                # Days in the Year
xVS = rpois(nsim, VS)     # Daily Qty of Small Boquets
xVM = rpois(nsim, VM)     # Daily Qty of Medium Boquets
xVL = rpois(nsim, VL)     # Daily Qty of Large Boquets
xVCake = rbinom(nsim, VS+VM+VL, XCake) # Daily Qty of Cake Orders
xVChoc = rbinom(nsim, VS+VM+VL, XChoc) # Daily Qty of Choc Orders
Xtable = data.frame(Qty_Small    = xVS,
Qty_Medium   = xVM,
Qty_Large    = xVL,
Price_Small  = 5,
Price_Medium = 7,
Price_Large  = 10,
Qty_Cake     = xVCake,
Qty_Choc     = xVChoc,
Price_Cake   = 10,
Price_Choc   = 3,
Qty_Penalty  = 50)
head(Xtable)      #first 6 rows
# Step 3 - Generate Simulated Y & Analyse
#          Apply Function To Simulated Xs
Profit = SimulateY(GetProfit, Xtable)
hist(Profit)
cat("\n", "Avg Daily Profit    :", mean(Profit), "\n",
"Total Annual Profit :", sum(Profit), "\n","\n")
# What is the chance the Florist makes atleast $300/day
length(Profit)
length(Profit[Profit >= 300]) / length(Profit)
nsim = 365                # Days in the Year
xVS = rpois(nsim, VS)     # Daily Qty of Small Boquets
xVM = rpois(nsim, VM)     # Daily Qty of Medium Boquets
xVL = rpois(nsim, VL)     # Daily Qty of Large Boquets
xVCake = rbinom(nsim, VS+VM+VL, XCake) # Daily Qty of Cake Orders
xVChoc = rbinom(nsim, VS+VM+VL, XChoc) # Daily Qty of Choc Orders
Xtable = data.frame(Qty_Small    = xVS,
Qty_Medium   = xVM,
Qty_Large    = xVL,
Price_Small  = 5,
Price_Medium = 7,
Price_Large  = 10,
Qty_Cake     = xVCake,
Qty_Choc     = xVChoc,
Price_Cake   = 10,
Price_Choc   = 3,
Qty_Penalty  = 50)
head(Xtable)      #first 6 rows
# Step 3 - Generate Simulated Y & Analyse
#          Apply Function To Simulated Xs
Profit = SimulateY(GetProfit, Xtable)
hist(Profit)
cat("\n", "Avg Daily Profit    :", mean(Profit), "\n",
"Total Annual Profit :", sum(Profit), "\n","\n")
# What is the chance the Florist makes atleast $300/day
length(Profit)
length(Profit[Profit >= 300]) / length(Profit)
nsim = 365                # Days in the Year
xVS = rpois(nsim, VS)     # Daily Qty of Small Boquets
xVM = rpois(nsim, VM)     # Daily Qty of Medium Boquets
xVL = rpois(nsim, VL)     # Daily Qty of Large Boquets
xVCake = rbinom(nsim, VS+VM+VL, XCake) # Daily Qty of Cake Orders
xVChoc = rbinom(nsim, VS+VM+VL, XChoc) # Daily Qty of Choc Orders
Xtable = data.frame(Qty_Small    = xVS,
Qty_Medium   = xVM,
Qty_Large    = xVL,
Price_Small  = 5,
Price_Medium = 7,
Price_Large  = 10,
Qty_Cake     = xVCake,
Qty_Choc     = xVChoc,
Price_Cake   = 10,
Price_Choc   = 3,
Qty_Penalty  = 50)
head(Xtable)      #first 6 rows
# Step 3 - Generate Simulated Y & Analyse
#          Apply Function To Simulated Xs
Profit = SimulateY(GetProfit, Xtable)
hist(Profit)
cat("\n", "Avg Daily Profit    :", mean(Profit), "\n",
"Total Annual Profit :", sum(Profit), "\n","\n")
# What is the chance the Florist makes atleast $300/day
length(Profit)
length(Profit[Profit >= 300]) / length(Profit)
nsim = 365                # Days in the Year
xVS = rpois(nsim, VS)     # Daily Qty of Small Boquets
xVM = rpois(nsim, VM)     # Daily Qty of Medium Boquets
xVL = rpois(nsim, VL)     # Daily Qty of Large Boquets
xVCake = rbinom(nsim, VS+VM+VL, XCake) # Daily Qty of Cake Orders
xVChoc = rbinom(nsim, VS+VM+VL, XChoc) # Daily Qty of Choc Orders
Xtable = data.frame(Qty_Small    = xVS,
Qty_Medium   = xVM,
Qty_Large    = xVL,
Price_Small  = 5,
Price_Medium = 7,
Price_Large  = 10,
Qty_Cake     = xVCake,
Qty_Choc     = xVChoc,
Price_Cake   = 10,
Price_Choc   = 3,
Qty_Penalty  = 50)
head(Xtable)      #first 6 rows
# Step 3 - Generate Simulated Y & Analyse
#          Apply Function To Simulated Xs
Profit = SimulateY(GetProfit, Xtable)
hist(Profit)
cat("\n", "Avg Daily Profit    :", mean(Profit), "\n",
"Total Annual Profit :", sum(Profit), "\n","\n")
# What is the chance the Florist makes atleast $300/day
length(Profit)
length(Profit[Profit >= 300]) / length(Profit)
nsim = 365                # Days in the Year
xVS = rpois(nsim, VS)     # Daily Qty of Small Boquets
xVM = rpois(nsim, VM)     # Daily Qty of Medium Boquets
xVL = rpois(nsim, VL)     # Daily Qty of Large Boquets
xVCake = rbinom(nsim, VS+VM+VL, XCake) # Daily Qty of Cake Orders
xVChoc = rbinom(nsim, VS+VM+VL, XChoc) # Daily Qty of Choc Orders
Xtable = data.frame(Qty_Small    = xVS,
Qty_Medium   = xVM,
Qty_Large    = xVL,
Price_Small  = 5,
Price_Medium = 7,
Price_Large  = 10,
Qty_Cake     = xVCake,
Qty_Choc     = xVChoc,
Price_Cake   = 10,
Price_Choc   = 3,
Qty_Penalty  = 50)
head(Xtable)      #first 6 rows
# Step 3 - Generate Simulated Y & Analyse
#          Apply Function To Simulated Xs
Profit = SimulateY(GetProfit, Xtable)
hist(Profit)
cat("\n", "Avg Daily Profit    :", mean(Profit), "\n",
"Total Annual Profit :", sum(Profit), "\n","\n")
# What is the chance the Florist makes atleast $300/day
length(Profit)
length(Profit[Profit >= 300]) / length(Profit)
nsim = 365                # Days in the Year
xVS = rpois(nsim, VS)     # Daily Qty of Small Boquets
xVM = rpois(nsim, VM)     # Daily Qty of Medium Boquets
xVL = rpois(nsim, VL)     # Daily Qty of Large Boquets
xVCake = rbinom(nsim, VS+VM+VL, XCake) # Daily Qty of Cake Orders
xVChoc = rbinom(nsim, VS+VM+VL, XChoc) # Daily Qty of Choc Orders
Xtable = data.frame(Qty_Small    = xVS,
Qty_Medium   = xVM,
Qty_Large    = xVL,
Price_Small  = 5,
Price_Medium = 7,
Price_Large  = 10,
Qty_Cake     = xVCake,
Qty_Choc     = xVChoc,
Price_Cake   = 10,
Price_Choc   = 3,
Qty_Penalty  = 50)
head(Xtable)      #first 6 rows
# Step 3 - Generate Simulated Y & Analyse
#          Apply Function To Simulated Xs
Profit = SimulateY(GetProfit, Xtable)
hist(Profit)
cat("\n", "Avg Daily Profit    :", mean(Profit), "\n",
"Total Annual Profit :", sum(Profit), "\n","\n")
# What is the chance the Florist makes atleast $300/day
length(Profit)
length(Profit[Profit >= 300]) / length(Profit)
nsim = 365                # Days in the Year
xVS = rpois(nsim, VS)     # Daily Qty of Small Boquets
xVM = rpois(nsim, VM)     # Daily Qty of Medium Boquets
xVL = rpois(nsim, VL)     # Daily Qty of Large Boquets
xVCake = rbinom(nsim, VS+VM+VL, XCake) # Daily Qty of Cake Orders
xVChoc = rbinom(nsim, VS+VM+VL, XChoc) # Daily Qty of Choc Orders
Xtable = data.frame(Qty_Small    = xVS,
Qty_Medium   = xVM,
Qty_Large    = xVL,
Price_Small  = 5,
Price_Medium = 7,
Price_Large  = 10,
Qty_Cake     = xVCake,
Qty_Choc     = xVChoc,
Price_Cake   = 10,
Price_Choc   = 3,
Qty_Penalty  = 50)
head(Xtable)      #first 6 rows
# Step 3 - Generate Simulated Y & Analyse
#          Apply Function To Simulated Xs
Profit = SimulateY(GetProfit, Xtable)
hist(Profit)
cat("\n", "Avg Daily Profit    :", mean(Profit), "\n",
"Total Annual Profit :", sum(Profit), "\n","\n")
# What is the chance the Florist makes atleast $300/day
length(Profit)
length(Profit[Profit >= 300]) / length(Profit)
nsim = 365                # Days in the Year
xVS = rpois(nsim, VS)     # Daily Qty of Small Boquets
xVM = rpois(nsim, VM)     # Daily Qty of Medium Boquets
xVL = rpois(nsim, VL)     # Daily Qty of Large Boquets
xVCake = rbinom(nsim, VS+VM+VL, XCake) # Daily Qty of Cake Orders
xVChoc = rbinom(nsim, VS+VM+VL, XChoc) # Daily Qty of Choc Orders
Xtable = data.frame(Qty_Small    = xVS,
Qty_Medium   = xVM,
Qty_Large    = xVL,
Price_Small  = 5,
Price_Medium = 7,
Price_Large  = 10,
Qty_Cake     = xVCake,
Qty_Choc     = xVChoc,
Price_Cake   = 10,
Price_Choc   = 3,
Qty_Penalty  = 50)
head(Xtable)      #first 6 rows
# Step 3 - Generate Simulated Y & Analyse
#          Apply Function To Simulated Xs
Profit = SimulateY(GetProfit, Xtable)
hist(Profit)
cat("\n", "Avg Daily Profit    :", mean(Profit), "\n",
"Total Annual Profit :", sum(Profit), "\n","\n")
# What is the chance the Florist makes atleast $300/day
length(Profit)
length(Profit[Profit >= 300]) / length(Profit)
nsim = 365                # Days in the Year
xVS = rpois(nsim, VS)     # Daily Qty of Small Boquets
xVM = rpois(nsim, VM)     # Daily Qty of Medium Boquets
xVL = rpois(nsim, VL)     # Daily Qty of Large Boquets
xVCake = rbinom(nsim, VS+VM+VL, XCake) # Daily Qty of Cake Orders
xVChoc = rbinom(nsim, VS+VM+VL, XChoc) # Daily Qty of Choc Orders
Xtable = data.frame(Qty_Small    = xVS,
Qty_Medium   = xVM,
Qty_Large    = xVL,
Price_Small  = 5,
Price_Medium = 7,
Price_Large  = 10,
Qty_Cake     = xVCake,
Qty_Choc     = xVChoc,
Price_Cake   = 10,
Price_Choc   = 3,
Qty_Penalty  = 50)
head(Xtable)      #first 6 rows
# Step 3 - Generate Simulated Y & Analyse
#          Apply Function To Simulated Xs
Profit = SimulateY(GetProfit, Xtable)
hist(Profit)
cat("\n", "Avg Daily Profit    :", mean(Profit), "\n",
"Total Annual Profit :", sum(Profit), "\n","\n")
# What is the chance the Florist makes atleast $300/day
length(Profit)
length(Profit[Profit >= 300]) / length(Profit)
nsim = 365                # Days in the Year
xVS = rpois(nsim, VS)     # Daily Qty of Small Boquets
xVM = rpois(nsim, VM)     # Daily Qty of Medium Boquets
xVL = rpois(nsim, VL)     # Daily Qty of Large Boquets
xVCake = rbinom(nsim, VS+VM+VL, XCake) # Daily Qty of Cake Orders
xVChoc = rbinom(nsim, VS+VM+VL, XChoc) # Daily Qty of Choc Orders
Xtable = data.frame(Qty_Small    = xVS,
Qty_Medium   = xVM,
Qty_Large    = xVL,
Price_Small  = 5,
Price_Medium = 7,
Price_Large  = 10,
Qty_Cake     = xVCake,
Qty_Choc     = xVChoc,
Price_Cake   = 10,
Price_Choc   = 3,
Qty_Penalty  = 50)
head(Xtable)      #first 6 rows
# Step 3 - Generate Simulated Y & Analyse
#          Apply Function To Simulated Xs
Profit = SimulateY(GetProfit, Xtable)
hist(Profit)
cat("\n", "Avg Daily Profit    :", mean(Profit), "\n",
"Total Annual Profit :", sum(Profit), "\n","\n")
# What is the chance the Florist makes atleast $300/day
length(Profit)
length(Profit[Profit >= 300]) / length(Profit)
nsim = 365                # Days in the Year
xVS = rpois(nsim, VS)     # Daily Qty of Small Boquets
xVM = rpois(nsim, VM)     # Daily Qty of Medium Boquets
xVL = rpois(nsim, VL)     # Daily Qty of Large Boquets
xVCake = rbinom(nsim, VS+VM+VL, XCake) # Daily Qty of Cake Orders
xVChoc = rbinom(nsim, VS+VM+VL, XChoc) # Daily Qty of Choc Orders
Xtable = data.frame(Qty_Small    = xVS,
Qty_Medium   = xVM,
Qty_Large    = xVL,
Price_Small  = 5,
Price_Medium = 7,
Price_Large  = 10,
Qty_Cake     = xVCake,
Qty_Choc     = xVChoc,
Price_Cake   = 10,
Price_Choc   = 3,
Qty_Penalty  = 50)
head(Xtable)      #first 6 rows
# Step 3 - Generate Simulated Y & Analyse
#          Apply Function To Simulated Xs
Profit = SimulateY(GetProfit, Xtable)
hist(Profit)
cat("\n", "Avg Daily Profit    :", mean(Profit), "\n",
"Total Annual Profit :", sum(Profit), "\n","\n")
# What is the chance the Florist makes atleast $300/day
length(Profit)
length(Profit[Profit >= 300]) / length(Profit)
nsim = 365                # Days in the Year
xVS = rpois(nsim, VS)     # Daily Qty of Small Boquets
xVM = rpois(nsim, VM)     # Daily Qty of Medium Boquets
xVL = rpois(nsim, VL)     # Daily Qty of Large Boquets
xVCake = rbinom(nsim, VS+VM+VL, XCake) # Daily Qty of Cake Orders
xVChoc = rbinom(nsim, VS+VM+VL, XChoc) # Daily Qty of Choc Orders
Xtable = data.frame(Qty_Small    = xVS,
Qty_Medium   = xVM,
Qty_Large    = xVL,
Price_Small  = 5,
Price_Medium = 7,
Price_Large  = 10,
Qty_Cake     = xVCake,
Qty_Choc     = xVChoc,
Price_Cake   = 10,
Price_Choc   = 3,
Qty_Penalty  = 50)
head(Xtable)      #first 6 rows
# Step 3 - Generate Simulated Y & Analyse
#          Apply Function To Simulated Xs
Profit = SimulateY(GetProfit, Xtable)
hist(Profit)
cat("\n", "Avg Daily Profit    :", mean(Profit), "\n",
"Total Annual Profit :", sum(Profit), "\n","\n")
# What is the chance the Florist makes atleast $300/day
length(Profit)
length(Profit[Profit >= 300]) / length(Profit)
nsim = 365                # Days in the Year
xVS = rpois(nsim, VS)     # Daily Qty of Small Boquets
xVM = rpois(nsim, VM)     # Daily Qty of Medium Boquets
xVL = rpois(nsim, VL)     # Daily Qty of Large Boquets
xVCake = rbinom(nsim, VS+VM+VL, XCake) # Daily Qty of Cake Orders
xVChoc = rbinom(nsim, VS+VM+VL, XChoc) # Daily Qty of Choc Orders
Xtable = data.frame(Qty_Small    = xVS,
Qty_Medium   = xVM,
Qty_Large    = xVL,
Price_Small  = 5,
Price_Medium = 7,
Price_Large  = 10,
Qty_Cake     = xVCake,
Qty_Choc     = xVChoc,
Price_Cake   = 10,
Price_Choc   = 3,
Qty_Penalty  = 50)
head(Xtable)      #first 6 rows
# Step 3 - Generate Simulated Y & Analyse
#          Apply Function To Simulated Xs
Profit = SimulateY(GetProfit, Xtable)
hist(Profit)
cat("\n", "Avg Daily Profit    :", mean(Profit), "\n",
"Total Annual Profit :", sum(Profit), "\n","\n")
# What is the chance the Florist makes atleast $300/day
length(Profit)
length(Profit[Profit >= 300]) / length(Profit)
GetProfit <- function(VS,VM,VL, PS,PM,PL, VCake,VChoc, PCake,PChoc, Max) {
Profit = VS*PS + VM*PM + VL*PL +
VCake*PCake + VChoc*PChoc
if(VS+VM+VL > Max) Profit = 0.9 * Profit
return(Profit)
}
Xvals = list(QtySmall = 20,
QtyMedium   = 15,
QtyLarge    = 10,
PriceSmall  = 5,
PriceMedium = 7,
PriceLarge  = 10,
QtyCake     = 0.05*(20+15+10),
QtyChoc     = 0.10*(20+15+10),
PriceCake   = 10,
PriceChoc   = 3,
QtyPentalty = 50)
S = MonteCarloSens(GetProfit, Xvals)
print(S)
# METHOD B - Sensitivity of Transfer Function
#            Over the range of Simulated Xs
# Step 1 - Define the Transfer Function
# Step 2 - Read Data File with X Distribution Data
Xparm = read.csv("Monte Carlo Analysis.csv")
print(Xparm)
Xtable = SimulateX(1000, GetProfit, Xparm)
head(Xtable)
# Step 4 - Simulated Y Values (Optional)
SimulateY(GetProfit,Xtable)
S = MonteCarloSens2(GetProfit, Xtable)
print(S)
MonthlyPayment(10000,36,5)
Xval = list(Loan = 10000,
Term = 36,
Rate = 5.0)
MonteCarloSens(MonthlyPayment, Xval)
